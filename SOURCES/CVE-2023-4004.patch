From 601f0c4bc4cf7e0b04a8d5801538626f3673c6d9 Mon Sep 17 00:00:00 2001
From: Ryan Sullivan <rysulliv@redhat.com>
Date: Mon, 28 Aug 2023 09:36:07 -0400
Subject: [KPATCH CVE-2023-4004] kpatch fixes for CVE-2023-4004

Kernels:
4.18.0-477.10.1.el8_8
4.18.0-477.13.1.el8_8
4.18.0-477.15.1.el8_8
4.18.0-477.21.1.el8_8


Kpatch-MR: https://gitlab.com/redhat/prdsc/rhel/src/kpatch/rhel-8/-/merge_requests/137
Approved-by: Joe Lawrence (@joe.lawrence)
Approved-by: Yannick Cote (@ycote1)
Changes since last build:
[x86_64]:
cls_flower.o: changed function: fl_set_geneve_opt
cls_fw.o: changed function: fw_set_parms
ipvlan_core.o: changed function: ipvlan_process_v6_outbound
ipvlan_core.o: changed function: ipvlan_queue_xmit
nf_tables_api.o: changed function: nf_tables_bind_set
nf_tables_api.o: changed function: nf_tables_deactivate_flowtable
nf_tables_api.o: changed function: nf_tables_deactivate_set
nf_tables_api.o: changed function: nf_tables_newrule
nf_tables_api.o: new function: __nft_set_trans_bind
nft_byteorder.o: changed function: nft_byteorder_eval
nft_set_pipapo.o: changed function: nft_pipapo_remove

[ppc64le]:
cls_flower.o: changed function: fl_set_geneve_opt
cls_fw.o: changed function: fw_set_parms
ipvlan_core.o: changed function: ipvlan_process_v6_outbound
ipvlan_core.o: changed function: ipvlan_queue_xmit
nf_tables_api.o: changed function: nf_tables_deactivate_flowtable
nf_tables_api.o: changed function: nf_tables_deactivate_set
nf_tables_api.o: changed function: nf_tables_newrule
nft_byteorder.o: changed function: nft_byteorder_eval
nft_set_pipapo.o: changed function: nft_pipapo_remove

---------------------------

Modifications: none

commit 5bbd777ebf58c232147f4ef4bf5d4efcc29bc305
Author: Phil Sutter <psutter@redhat.com>
Date:   Wed Jul 26 17:53:01 2023 +0200

    netfilter: nft_set_pipapo: fix improper element removal

    Bugzilla: https://bugzilla.redhat.com/2227508
    CVE: CVE-2023-4004
    Y-Commit: 754cdae33e5aeb3d475a061be178d605bbb4a422

    O-Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=2225276
    Upstream Status: commit 87b5a5c209405
    O-CVE: CVE-2023-4004

    commit 87b5a5c209405cb6b57424cdfa226a6dbd349232
    Author: Florian Westphal <fw@strlen.de>
    Date:   Wed Jul 19 21:08:21 2023 +0200

        netfilter: nft_set_pipapo: fix improper element removal

        end key should be equal to start unless NFT_SET_EXT_KEY_END is present.

        Its possible to add elements that only have a start key
        ("{ 1.0.0.0 . 2.0.0.0 }") without an internval end.

        Insertion treats this via:

        if (nft_set_ext_exists(ext, NFT_SET_EXT_KEY_END))
           end = (const u8 *)nft_set_ext_key_end(ext)->data;
        else
           end = start;

        but removal side always uses nft_set_ext_key_end().
        This is wrong and leads to garbage remaining in the set after removal
        next lookup/insert attempt will give:

        BUG: KASAN: slab-use-after-free in pipapo_get+0x8eb/0xb90
        Read of size 1 at addr ffff888100d50586 by task nft-pipapo_uaf_/1399
        Call Trace:
         kasan_report+0x105/0x140
         pipapo_get+0x8eb/0xb90
         nft_pipapo_insert+0x1dc/0x1710
         nf_tables_newsetelem+0x31f5/0x4e00
         ..

        Fixes: 3c4287f62044 ("nf_tables: Add set type for arbitrary concatenation of ranges")
        Reported-by: lonial con <kongln9170@gmail.com>
        Reviewed-by: Stefano Brivio <sbrivio@redhat.com>
        Signed-off-by: Florian Westphal <fw@strlen.de>

    Signed-off-by: Phil Sutter <psutter@redhat.com>
    Signed-off-by: Lucas Zampieri <lzampier@redhat.com>

Signed-off-by: Ryan Sullivan <rysulliv@redhat.com>
---
 net/netfilter/nft_set_pipapo.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/net/netfilter/nft_set_pipapo.c b/net/netfilter/nft_set_pipapo.c
index 1eab335fb14b..0181617f9628 100644
--- a/net/netfilter/nft_set_pipapo.c
+++ b/net/netfilter/nft_set_pipapo.c
@@ -1797,7 +1797,11 @@ static void nft_pipapo_remove(const struct net *net, const struct nft_set *set,
 		int i, start, rules_fx;
 
 		match_start = data;
-		match_end = (const u8 *)nft_set_ext_key_end(&e->ext)->data;
+
+		if (nft_set_ext_exists(&e->ext, NFT_SET_EXT_KEY_END))
+			match_end = (const u8 *)nft_set_ext_key_end(&e->ext)->data;
+		else
+			match_end = data;
 
 		start = first_rule;
 		rules_fx = rules_f0;
-- 
2.40.1


